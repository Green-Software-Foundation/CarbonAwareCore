"use strict";(self.webpackChunkcasdk_docs=self.webpackChunkcasdk_docs||[]).push([[269],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),l=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(a),u=r,k=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[m]="string"==typeof e?e:r,o[1]=p;for(var l=2;l<i;l++)o[l]=a[l];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1899:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>l});var n=a(7462),r=(a(7294),a(3905));const i={},o=void 0,p={unversionedId:"tutorial-extras/packaging",id:"tutorial-extras/packaging",title:"packaging",description:"---",source:"@site/docs/tutorial-extras/packaging.md",sourceDirName:"tutorial-extras",slug:"/tutorial-extras/packaging",permalink:"/carbon-aware-sdk/docs/tutorial-extras/packaging",draft:!1,editUrl:"https://github.com/Green-Software-Foundation/carbon-aware-sdk/docs/tutorial-extras/packaging.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Linting",permalink:"/carbon-aware-sdk/docs/tutorial-extras/linting"},next:{title:"Architecture",permalink:"/carbon-aware-sdk/docs/category/architecture"}},s={},l=[],c={toc:l},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("hr",null),(0,r.kt)("hr",null),(0,r.kt)("h1",{id:"packaging-the-carbon-aware-sdk"},"Packaging the Carbon Aware SDK"),(0,r.kt)("p",null,"  With the addition of the C# Client Library as a way to consume the Carbon Aware\nSDK, we have also added ",(0,r.kt)("a",{parentName:"p",href:"../scripts/package/"},"powershell scripts")," to package the\nlibrary, and have included a sample ",(0,r.kt)("a",{parentName:"p",href:"../samples/lib-integration/"},"Console App"),"\nshowing how the package can be consumed."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"#packaging-the-carbon-aware-sdk"},"Packaging the Carbon Aware SDK")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#included-projects"},"Included Projects")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#included-scripts"},"Included Scripts"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#running-the-packaging-scripts"},"Running the packaging scripts")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#sdk-configuration"},"SDK Configuration"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#electricitymapsfree"},"ElectricityMapsFree")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#electricitymaps"},"ElectricityMaps")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#watttime"},"WattTime")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#json"},"Json")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#use-package-with-dependency-injection"},"Use Package with Dependency Injection")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#console-app-sample"},"Console App Sample"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#run-the-sample-console-app"},"Run the Sample Console App"))))),(0,r.kt)("h2",{parentName:"li",id:"included-projects"},"Included Projects"),(0,r.kt)("p",{parentName:"li"},"The current package include 8 projects from the SDK:"))),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'"GSF.CarbonAware"')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'"CarbonAware"')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'"CarbonAware.DataSources.ElectricityMapsFree"')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'"CarbonAware.DataSources.ElectricityMaps"')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'"CarbonAware.DataSources.Json"')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'"CarbonAware.DataSources.Registration"')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'"CarbonAware.DataSources.WattTime"')),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},'"CarbonAware.LocationSources"'),(0,r.kt)("p",{parentName:"li"},"These 8 projects enable users of the library to consume the current endpoints\nexposed by the library. The package that needs to be added to a new C# project\nis ",(0,r.kt)("inlineCode",{parentName:"p"},"GSF.CarbonAware"),"."),(0,r.kt)("h2",{parentName:"li",id:"included-scripts"},"Included Scripts"),(0,r.kt)("p",{parentName:"li"},"There are 2 scripts included to help the packaging process")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"create_packages.ps1 <dotnet_solution> <package_destination>"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"add_packages.ps1 <dotnet_project> <package_destination>")),(0,r.kt)("p",{parentName:"li"},"The ",(0,r.kt)("a",{parentName:"p",href:"../scripts/package/create_packages.ps1"},(0,r.kt)("inlineCode",{parentName:"a"},"create_packages"))," script is called\nwith 2 parameters: the CarbonAwareSDK dotnet solution file (",(0,r.kt)("inlineCode",{parentName:"p"},".sln"),") path, and\nthe output directory destination for the package. The\n",(0,r.kt)("a",{parentName:"p",href:"../scripts/package/add_packages.ps1"},(0,r.kt)("inlineCode",{parentName:"a"},"add_packages"))," script is also called with\n2 parameters: the target project file (",(0,r.kt)("inlineCode",{parentName:"p"},".csproj"),") path, and the package\ndestination path."),(0,r.kt)("p",{parentName:"li"},"To see a working example of both scripts being invoked, you can look at the\ngithub action detailed in\n",(0,r.kt)("a",{parentName:"p",href:"../.github/workflows/build-packages.yaml"},"build-packages.yaml"),"."),(0,r.kt)("h3",{parentName:"li",id:"running-the-packaging-scripts"},"Running the packaging scripts"),(0,r.kt)("p",{parentName:"li"},"The packaging scripts can be run inside a VS Code dev container defined in this\nproject. When running in the dev container you will need:"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://www.docker.com/products/docker-desktop/"},"Docker Desktop"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/"},"VSCode"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("a",{parentName:"p",href:"https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers"},"Remote Containers extension for VSCode")),(0,r.kt)("p",{parentName:"li"},"Alternatively you can run in your local environment using the\n",(0,r.kt)("a",{parentName:"p",href:"https://dotnet.microsoft.com/en-us/download/dotnet/6.0"},".NET Core 6.0 SDK"),"."),(0,r.kt)("h2",{parentName:"li",id:"sdk-configuration"},"SDK Configuration"),(0,r.kt)("p",{parentName:"li"},"The configuration needed to connect to WattTime, ElectricityMaps,\nElectricityMapsFree, or Json data sources can be managed using environment\nvariables or appsettings.\nMore information on data source configuration can be found\n",(0,r.kt)("a",{parentName:"p",href:"/carbon-aware-sdk/docs/tutorial-extras/configuration#datasources"},"here")),(0,r.kt)("h3",{parentName:"li",id:"electricitymapsfree"},"ElectricityMapsFree"),(0,r.kt)("p",{parentName:"li"},"Below are the environment variables needed to set up the\n",(0,r.kt)("strong",{parentName:"p"},"ElectricityMapsFree")," data source."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export DataSources__EmissionsDataSource=ElectricityMapsFree\nexport DataSources__Configurations__ElectricityMapsFree__Type=ElectricityMapsFree\nexport DataSources__Configurations__ElectricityMapsFree__token=[ElectricityMapsFree APIToken]`\n")),(0,r.kt)("h3",{parentName:"li",id:"electricitymaps"},"ElectricityMaps"),(0,r.kt)("p",{parentName:"li"},"Below are the environment variables needed to set up the\n",(0,r.kt)("strong",{parentName:"p"},"ElectricityMaps")," data source."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"export DataSources__ForecastDataSource=ElectricityMaps\nexport DataSources__Configurations__ElectricityMaps__Type=ElectricityMaps\nexport DataSources__Configurations__ElectricityMaps__APITokenHeader=[ElectricityMaps APITokenHeader]\nexport DataSources__Configurations__ElectricityMaps__APIToken=[ElectricityMaps APIToken]`\n")),(0,r.kt)("h3",{parentName:"li",id:"watttime"},"WattTime"),(0,r.kt)("p",{parentName:"li"},"Below are the environment variables needed to set up the\n",(0,r.kt)("strong",{parentName:"p"},"WattTime")," data source."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'export DataSources__EmissionsDataSource=WattTime`\nexport DataSources__ForecastDataSource=WattTime`\nexport DataSources__Configurations__WattTime__Type=WattTime`\nexport DataSources__Configurations__WattTime__Username=[WattTime Username]`\nexport DataSources__Configurations__WattTime__Password=[WattTime Password]`\nexport DataSources__Configurations__WattTime__BaseURL="https://api2.watttime.org/v2/"`\n')),(0,r.kt)("h3",{parentName:"li",id:"json"},"Json"),(0,r.kt)("p",{parentName:"li"},"Below is the environment variable needed to set up the\n",(0,r.kt)("strong",{parentName:"p"},"Json")," data source."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'export DataSources__EmissionsDataSource=Json`\nexport DataSources__Configurations__Json__Type=Json`\nexport DataSources__Configurations__Json__DataFileLocation="test-data-azure-emissions.json"`\n')),(0,r.kt)("h2",{parentName:"li",id:"use-package-with-dependency-injection"},"Use Package with Dependency Injection"),(0,r.kt)("p",{parentName:"li"},"In order to get access to the\n",(0,r.kt)("a",{parentName:"p",href:"/carbon-aware-sdk/docs/architecture/c-sharp-client-library#handlers"},"handlers")," in the library, a\ncommon practice with C# is through ",(0,r.kt)("inlineCode",{parentName:"p"},"Microsoft.Extensions.DependencyInjection"),"\nextensions. This way the whole life cycle of the handler instance is managed by\nthe container\u2019s framework, and it would help to isolate the concrete\nimplementation from the user facing interface. For instance, a consumer would be\nable to call extensions as:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-c#"},"// Using DI Services (Emissions) to register GSF SDK library\nservices.AddEmissionsServices(configuration);\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-c#"},"// An application Consumer construct should inject a GSF handler like the following example\nclass ConsumerClass(IEmissionsHandler handler, ILogger<ConsumerClass> logger)\n{\n    ....\n    this._handler = handler;\n    this._logger = logger;\n    ....\n}\n")),(0,r.kt)("p",{parentName:"li"},"And the usage of a method for IEmissionsHandler"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-c#"},"async Task<double> GetRating()\n{\n    ...\n    return await this._handler.GetAverageCarbonIntensity(\u2026);\n}\n")),(0,r.kt)("p",{parentName:"li"},"Another functionality of the application could just do Forecast data. So, it\nwould be a matter of following the same pattern:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-c#"},"// Using DI Services (Forecast) to register GSF SDK library\nservices.AddForecastServices(configuration);\n")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-c#"},"class ForecastApp(IForecastHandler handler)\n{\n    ...\n    this._handler = handler;\n}\n")),(0,r.kt)("p",{parentName:"li"},"And the usage of a method for IForecastHandler:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-c#"},"async Task<EmissionsData> GetOptimal(\u2026)\n{\n    ...\n    return await this._handler.GetCurrentAsync()...).OptimalDataPoints.First();\n}\n")),(0,r.kt)("p",{parentName:"li"},"This way it would fit within the same stack as the rest of the SDK is\nimplemented. Also, it would be easier to integrate later when the current\nconsumers (CLI/WebApi) should be moved to use the library."),(0,r.kt)("h2",{parentName:"li",id:"console-app-sample"},"Console App Sample"),(0,r.kt)("p",{parentName:"li"},"There is a sample console app in the\n",(0,r.kt)("a",{parentName:"p",href:"../samples/lib-integration/ConsoleApp/"},"lib integration folder")," to demonstrate\npackage creation and interaction with Carbon Aware SDK."),(0,r.kt)("h3",{parentName:"li",id:"run-the-sample-console-app"},"Run the Sample Console App"),(0,r.kt)("p",{parentName:"li"},"In order to build and run the app, all the dependent packages need to be created\nfirst and then imported in the app. Follow the steps below to run the sample\nconsole app -")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Run the ",(0,r.kt)("a",{parentName:"p",href:"#included-scripts"},"script commands")," to create the packages and add\nthem into the app.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Create the ",(0,r.kt)("a",{parentName:"p",href:"#sdk-configuration"},"environment variables")," to connect to the\nWattTime or Json data sources."))))}d.isMDXComponent=!0}}]);